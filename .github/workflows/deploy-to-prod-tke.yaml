# GitHub 工作流
# 部署到生产环境（TKE, Tencent Kubernetes Engine）
#
# 需配置以下密钥
#  - PROD_CONFIG_SCHEDULER: 生产环境配置。
#  - TENCENT_CLOUD_ACCOUNT_ID: 腾讯云账户 ID。
#  - TKE_CLUSTER_ID: TKE 集群唯一标识。
#  - TKE_KUBE_CONFIG: TKE 连接配置信息。
#  - TKE_REGISTRY_PASSWORD: TKE 镜像仓库密码。
#  - TKE_REGISTRY_SERVER: TKE 镜像仓库地址（包含路径）。

# 工作流名称
name: 部署到生产环境（TKE）

# 触发工作流方式，workflow_dispatch 表示手动触发
on: workflow_dispatch

# 作业清单
jobs:
  # 作业唯一标识符
  deploy-to-production-tke:
    # 作业名称
    name: 部署到生产环境（TKE）
    # 运行作业的机器类型
    runs-on: ubuntu-latest
    # 作业引用的环境
    environment: production
    # 作业包含的一系列步骤（任务）
    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置项目配置信息
        run: |
          echo -e "${{ secrets.PROD_CONFIG_SCHEDULER }}" > ./config/production.js

      - name: 构建 Docker 镜像
        run: |
          docker build -t ${{ secrets.TKE_REGISTRY_SERVER }}:${GITHUB_SHA}${GITHUB_RUN_ID} .

      - name: 登录 TKE 镜像仓库
        run: |
          docker login -u ${{ secrets.TENCENT_CLOUD_ACCOUNT_ID }} -p '${{ secrets.TKE_REGISTRY_PASSWORD }}' ${{ secrets.TKE_REGISTRY_SERVER }}

      - name: 将 Docker 镜像推到 TKE 镜像仓库
        run: |
          docker push ${{ secrets.TKE_REGISTRY_SERVER }}:${GITHUB_SHA}${GITHUB_RUN_ID}

      - name: 设置 ~/.kube/config 用于连接 TKE 集群
        run: |
          mkdir ~/.kube
          echo -e "${{ secrets.TKE_KUBE_CONFIG }}" > ~/.kube/config

      - name: 切换到 TKE 上下文
        run: |
          kubectl config use-context ${{ secrets.TKE_CLUSTER_ID }}-${{ secrets.TENCENT_CLOUD_ACCOUNT_ID }}-context-default

      - name: 更新 scheduler 集群镜像
        run: |
          kubectl set image statefulset/scheduler container1=${{ secrets.TKE_REGISTRY_SERVER }}:${GITHUB_SHA}${GITHUB_RUN_ID}
